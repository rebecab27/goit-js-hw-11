{"mappings":"AAAA,IASIA,SATEC,QAAU,qCACVC,SAAW,2BACbC,YAAc,EACdC,aAAe,GACbC,QAAU,GAEVC,WAAaC,SAASC,eAAe,eACrCC,QAAUF,SAASG,cAAc,YACjCC,eAAiBJ,SAASG,cAAc,cAM9C,SAASE,SAASC,GAChBA,EAAMC,iBAEe,MADrBV,aAAeS,EAAME,cAAcC,SAASC,YAAYC,MAAMC,SAK9DhB,YAAc,EACdM,QAAQW,UAAY,GACpBT,eAAeU,MAAMC,QAAU,OAC/BC,YAAYnB,aAAcD,cANxBqB,SAASC,OAAOC,QAAQ,+B,CAS5B,SAASH,YAAYI,EAAOC,GAC1B,IAAMC,EAAM,GAAmBC,OAAhB5B,SAAS,SAAoB4B,OAAb7B,QAAQ,OAE2B6B,OAFtBC,mBAC1CJ,GACA,kEAAiFG,OAAjBF,EAAK,cAAoBE,OAARzB,SAEnF2B,QAAQC,IAAI,4BAA6BJ,GAExCK,MAAKL,GACHM,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,M,IAEjBJ,MAAK,SAAAK,GACJR,QAAQC,IAAI,iBAAkBO,GAEL,IAArBA,EAAKC,KAAKC,QAMdC,aAAaH,EAAKC,MACbzC,SAMHA,SAAS4C,UALT5C,SAAW,IAAI6C,eAAe,aAAc,CAC1CC,aAAc,MACdC,aAAc,MAKdP,EAAKQ,UAAY3C,QAAUF,cAC7BQ,eAAeU,MAAMC,QAAU,SAEjCE,SAASC,OAAOwB,QAAQ,oBAAmCnB,OAAfU,EAAKQ,UAAU,cAjBzDxB,SAASC,OAAOC,QACd,2E,IAkBLwB,OAAM,SAAAC,GACLnB,QAAQmB,MAAM,yBAA0BA,GACxC3B,SAASC,OAAOC,QACd,6D,IAKR,SAASiB,aAAaS,GACpB,IAAMC,EAASD,EACZE,KAAI,SAAAC,GACH,MAAO,sDAGSzB,OADHyB,EAAMC,cAAc,4BACW1B,OAA5ByB,EAAME,aAAa,WAGM3B,OAHGyB,EAAMG,KAAK,gHAId5B,OADAyB,EAAMI,MAAM,uDAET7B,OADHyB,EAAMK,MAAM,0DAER9B,OADDyB,EAAMM,SAAS,2DACE/B,OAAhByB,EAAMO,UAAU,2C,IAK9DC,KAAK,IAERtD,QAAQuD,mBAAmB,YAAaX,E,CAG1C,SAASY,iBAEP1C,YAAYnB,aADZD,aAAe,GAEf+D,YAAW,WACT,IAAQC,EAAuB5D,SAC5BG,cAAc,YACd0D,kBAAkBC,wBAFbC,OAGRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,U,GAEX,I,CA9FLpE,WAAWqE,iBAAiB,SAAU/D,UACtCD,eAAegE,iBAAiB,QAASV","sources":["src/js/index.js"],"sourcesContent":["const API_KEY = '44190966-0aa6bbea47325323a5628291c'; // Cheia API furnizată\nconst BASE_URL = 'https://pixabay.com/api/';\nlet currentPage = 1;\nlet currentQuery = '';\nconst perPage = 40;\n\nconst searchForm = document.getElementById('search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreButton = document.querySelector('.load-more');\nlet lightbox;\n\nsearchForm.addEventListener('submit', onSearch);\nloadMoreButton.addEventListener('click', loadMoreImages);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  currentQuery = event.currentTarget.elements.searchQuery.value.trim();\n  if (currentQuery === '') {\n    Notiflix.Notify.failure('Please enter a search query.');\n    return;\n  }\n  currentPage = 1;\n  gallery.innerHTML = '';\n  loadMoreButton.style.display = 'none';\n  fetchImages(currentQuery, currentPage);\n}\n\nfunction fetchImages(query, page) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(\n    query\n  )}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n\n  console.log('Fetching images with URL:', url); // Adaugă acest log\n\n  fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('Received data:', data); // Adaugă acest log\n\n      if (data.hits.length === 0) {\n        Notiflix.Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n      renderImages(data.hits);\n      if (!lightbox) {\n        lightbox = new SimpleLightbox('.gallery a', {\n          captionsData: 'alt',\n          captionDelay: 250,\n        });\n      } else {\n        lightbox.refresh();\n      }\n      if (data.totalHits > perPage * currentPage) {\n        loadMoreButton.style.display = 'block';\n      }\n      Notiflix.Notify.success(`Hooray! We found ${data.totalHits} images.`);\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      Notiflix.Notify.failure(\n        'An error occurred while fetching images. Please try again.'\n      );\n    });\n}\n\nfunction renderImages(images) {\n  const markup = images\n    .map(image => {\n      return `\n      <div class=\"photo-card\">\n        <a href=\"${image.largeImageURL}\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-item\"><b>Likes</b>: ${image.likes}</p>\n          <p class=\"info-item\"><b>Views</b>: ${image.views}</p>\n          <p class=\"info-item\"><b>Comments</b>: ${image.comments}</p>\n          <p class=\"info-item\"><b>Downloads</b>: ${image.downloads}</p>\n        </div>\n      </div>\n    `;\n    })\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction loadMoreImages() {\n  currentPage += 1;\n  fetchImages(currentQuery, currentPage);\n  setTimeout(() => {\n    const { height: cardHeight } = document\n      .querySelector('.gallery')\n      .firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  }, 500);\n}\n"],"names":["lightbox","API_KEY","BASE_URL","currentPage","currentQuery","perPage","searchForm","document","getElementById","gallery","querySelector","loadMoreButton","onSearch","event","preventDefault","currentTarget","elements","searchQuery","value","trim","innerHTML","style","display","fetchImages","Notiflix","Notify","failure","query","page","url","concat","encodeURIComponent","console","log","fetch","then","response","ok","Error","json","data","hits","length","renderImages","refresh","SimpleLightbox","captionsData","captionDelay","totalHits","success","catch","error","images","markup","map","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","loadMoreImages","setTimeout","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","addEventListener"],"version":3,"file":"index.1ae84a01.js.map"}